human <- select (human, one_of(keep))
dim(human)
# Remove rows with missing values
complete.cases(human)
human_ <- filter (human, complete.cases(human) == TRUE)
str(human_)
# Remove regions
human_$Country
human_[- c(4, 44, 50, 81, 132, 135, 159), ]
human_countries <- human_[- c(4, 44, 50, 81, 132, 135, 159), ]
str(human_countries)
# Use country names as column names
rownames(human_countries) <- human_countries$Country
human <- select(human_countries, - Country)
str(human)
write.table(human, file = "human")
library(dplyr)
keep <- c( "Country", "Edu2.FM", "Labo.FM", "Edu.Exp", "Life.Exp", "GNI", "Mat.Mor", "Ado.Birth", "Parli.F")
human <- select (human, one_of(keep))
dim(human)
GNI <- str_replace(human$GNI, pattern = ",", replacement = "") %>% as.numeric(as.character)
human <- mutate(human, GNI = GNI)
str(human)
library(dplyr)
keep <- c( "Country", "Edu2.FM", "Labo.FM", "Edu.Exp", "Life.Exp", "GNI", "Mat.Mor", "Ado.Birth", "Parli.F")
human <- select (human, one_of(keep))
#read datasets
hd <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human_development.csv", stringsAsFactors = F)
gii <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/gender_inequality.csv", stringsAsFactors = F, na.strings = "..")
# structure and dimensions; summaries
str(hd)
dim(hd)
str(gii)
dim(gii)
summary(hd)
summary(gii)
# rename variables
colnames(hd) <- c ("HDI_rank", "Country", "HDI", "Life.Exp", "Edu.Exp", "edu_years", "GNI", "GNI_rank")
colnames(gii) <- c ("GII_rank", "Country", "gender_ineq", "Mat.Mor", "Ado.Birth", "Parli.F", "Edu2.F", "Edu2.M", "Labo.F", "Labo.M")
colnames (gii)
# New gender inequality variables
Edu2.FM <- gii$Edu2.F / gii$Edu2.M
Labo.FM <- gii$Labo.F / gii$Labo.M
summary(Edu2.FM)
gii["Edu2.FM"] <- Edu2.FM
gii["Labo.FM"] <- Labo.FM
# join datasets
human <- merge (hd, gii, by = "Country")
str(human)
dim(human)
colnames(human)
write.table(human, file = "human")
# Transforming GNI
library(stringr)
GNI <- str_replace(human$GNI, pattern = ",", replacement = "") %>% as.numeric(as.character)
human <- mutate(human, GNI = GNI)
str(human)
# Selecting necessary columns
library(dplyr)
keep <- c( "Country", "Edu2.FM", "Labo.FM", "Edu.Exp", "Life.Exp", "GNI", "Mat.Mor", "Ado.Birth", "Parli.F")
human <- select (human, one_of(keep))
dim(human)
# Remove rows with missing values
complete.cases(human)
human_ <- filter (human, complete.cases(human) == TRUE)
str(human_)
# Remove regions
human_$Country
human_[- c(4, 44, 50, 81, 132, 135, 159), ]
human_countries <- human_[- c(4, 44, 50, 81, 132, 135, 159), ]
str(human_countries)
# Use country names as column names
rownames(human_countries) <- human_countries$Country
human <- select(human_countries, - Country)
str(human)
write.table(human, file = "human")
library(stringr)
GNI <- str_replace(human$GNI, pattern = ",", replacement = "") %>% as.numeric(as.character)
human <- mutate(human, GNI = GNI)
str(human)
# Selecting necessary columns
library(dplyr)
keep <- c( "Country", "Edu2.FM", "Labo.FM", "Edu.Exp", "Life.Exp", "GNI", "Mat.Mor", "Ado.Birth", "Parli.F")
human <- select (human, one_of(keep))
dim(human)
# Remove rows with missing values
complete.cases(human)
human_ <- filter (human, complete.cases(human) == TRUE)
str(human_)
# Remove regions
human_$Country
human_[- c(4, 44, 50, 81, 132, 135, 159), ]
human_countries <- human_[- c(4, 44, 50, 81, 132, 135, 159), ]
str(human_countries)
# Use country names as column names
rownames(human_countries) <- human_countries$Country
human <- select(human_countries, - Country)
str(human)
write.table(human, file = "human")
hd <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human_development.csv", stringsAsFactors = F)
gii <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/gender_inequality.csv", stringsAsFactors = F, na.strings = "..")
colnames(hd) <- c ("HDI_rank", "Country", "HDI", "Life.Exp", "Edu.Exp", "edu_years", "GNI", "GNI_rank")
colnames(gii) <- c ("GII_rank", "Country", "gender_ineq", "Mat.Mor", "Ado.Birth", "Parli.F", "Edu2.F", "Edu2.M", "Labo.F", "Labo.M")
colnames (gii)
Edu2.FM <- gii$Edu2.F / gii$Edu2.M
Labo.FM <- gii$Labo.F / gii$Labo.M
summary(Edu2.FM)
gii["Edu2.FM"] <- Edu2.FM
gii["Labo.FM"] <- Labo.FM
human <- merge (hd, gii, by = "Country")
str(human)
library(stringr)
GNI <- str_replace(human$GNI, pattern = ",", replacement = "") %>% as.numeric(as.character)
human <- mutate(human, GNI = GNI)
str(human)
human <- mutate(human, GNI = str_replace(human$GNI, pattern = ",", replacement = "") %>% as.numeric(as.character))
str(human)
str(human)
library(dplyr)
keep <- c( "Country", "Edu2.FM", "Labo.FM", "Edu.Exp", "Life.Exp", "GNI", "Mat.Mor", "Ado.Birth", "Parli.F")
human <- select (human, one_of(keep))
human <- select(human, one_of(keep))
?select
human <- select(human, keep)
human <- select(human, c( "Country", "Edu2.FM", "Labo.FM", "Edu.Exp", "Life.Exp", "GNI", "Mat.Mor", "Ado.Birth", "Parli.F"))
human <- select(human, one_of(keep))
human <- human()"Country", "Edu2.FM", "Labo.FM", "Edu.Exp", "Life.Exp", "GNI", "Mat.Mor", "Ado.Birth", "Parli.F")
human <- human("Country", "Edu2.FM", "Labo.FM", "Edu.Exp", "Life.Exp", "GNI", "Mat.Mor", "Ado.Birth", "Parli.F")
keep <- c( "Country", "Edu2.FM", "Labo.FM", "Edu.Exp", "Life.Exp", "GNI", "Mat.Mor", "Ado.Birth", "Parli.F")
human <- select(human, one_of(keep))
str(human)
hd <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human_development.csv", stringsAsFactors = F)
gii <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/gender_inequality.csv", stringsAsFactors = F, na.strings = "..")
colnames(hd) <- c ("HDI_rank", "Country", "HDI", "Life.Exp", "Edu.Exp", "edu_years", "GNI", "GNI_rank")
colnames(gii) <- c ("GII_rank", "Country", "gender_ineq", "Mat.Mor", "Ado.Birth", "Parli.F", "Edu2.F", "Edu2.M", "Labo.F", "Labo.M")
colnames (gii)
Edu2.FM <- gii$Edu2.F / gii$Edu2.M
Labo.FM <- gii$Labo.F / gii$Labo.M
gii["Edu2.FM"] <- Edu2.FM
gii["Labo.FM"] <- Labo.FM
human <- merge (hd, gii, by = "Country")
str(human)
library(stringr)
human <- str_replace(human$GNI, pattern = ",", replacement = "") %>% as.numeric
str(human)
hd <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human_development.csv", stringsAsFactors = F)
gii <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/gender_inequality.csv", stringsAsFactors = F, na.strings = "..")
colnames(hd) <- c ("HDI_rank", "Country", "HDI", "Life.Exp", "Edu.Exp", "edu_years", "GNI", "GNI_rank")
colnames(gii) <- c ("GII_rank", "Country", "gender_ineq", "Mat.Mor", "Ado.Birth", "Parli.F", "Edu2.F", "Edu2.M", "Labo.F", "Labo.M")
Edu2.FM <- gii$Edu2.F / gii$Edu2.M
Labo.FM <- gii$Labo.F / gii$Labo.M
gii["Edu2.FM"] <- Edu2.FM
gii["Labo.FM"] <- Labo.FM
human <- merge (hd, gii, by = "Country")
str(human)
dim(human)
colnames(human)
human <- mutate (human, GNI = str_replace(human$GNI, pattern = ",", replacement = "") %>% as.numeric
# Selecting necessary columns
library(dplyr)
keep <- c( "Country", "Edu2.FM", "Labo.FM", "Edu.Exp", "Life.Exp", "GNI", "Mat.Mor", "Ado.Birth", "Parli.F")
human <- select (human, one_of(keep))
dim(human)
# Remove rows with missing values
complete.cases(human)
human_ <- filter (human, complete.cases(human) == TRUE)
str(human_)
# Remove regions
human_$Country
human_[- c(4, 44, 50, 81, 132, 135, 159), ]
human_countries <- human_[- c(4, 44, 50, 81, 132, 135, 159), ]
str(human_countries)
# Use country names as column names
rownames(human_countries) <- human_countries$Country
human <- select(human_countries, - Country)
str(human)
write.table(human, file = "human")
human <- mutate (human, GNI = str_replace(human$GNI, pattern = ",", replacement = "") %>% as.numeric
# Selecting necessary columns
library(dplyr)
keep <- c( "Country", "Edu2.FM", "Labo.FM", "Edu.Exp", "Life.Exp", "GNI", "Mat.Mor", "Ado.Birth", "Parli.F")
human <- select (human, one_of(keep))
dim(human)
# Remove rows with missing values
complete.cases(human)
human_ <- filter (human, complete.cases(human) == TRUE)
str(human_)
# Remove regions
human_$Country
human_[- c(4, 44, 50, 81, 132, 135, 159), ]
human_countries <- human_[- c(4, 44, 50, 81, 132, 135, 159), ]
str(human_countries)
# Use country names as column names
rownames(human_countries) <- human_countries$Country
human <- select(human_countries, - Country)
str(human)
write.table(human, file = "human")
human <- mutate (human, GNI = str_replace(human$GNI, pattern = ",", replacement = "") %>% as.numeric
# Selecting necessary columns
library(dplyr)
keep <- c( "Country", "Edu2.FM", "Labo.FM", "Edu.Exp", "Life.Exp", "GNI", "Mat.Mor", "Ado.Birth", "Parli.F")
human <- select (human, one_of(keep))
dim(human)
# Remove rows with missing values
complete.cases(human)
human_ <- filter (human, complete.cases(human) == TRUE)
str(human_)
# Remove regions
human_$Country
human_[- c(4, 44, 50, 81, 132, 135, 159), ]
human_countries <- human_[- c(4, 44, 50, 81, 132, 135, 159), ]
str(human_countries)
# Use country names as column names
rownames(human_countries) <- human_countries$Country
human <- select(human_countries, - Country)
str(human)
write.table(human, file = "human")
human <- mutate (human, GNI = str_replace(human$GNI, pattern = ",", replacement = "") %>% as.numeric
str(human)
human <- mutate (human, GNI = str_replace(human$GNI, pattern = ",", replacement = "") %>% as.numeric)
str(human)
library(dplyr)
keep <- c( "Country", "Edu2.FM", "Labo.FM", "Edu.Exp", "Life.Exp", "GNI", "Mat.Mor", "Ado.Birth", "Parli.F")
human <- select (human, one_of(keep))
dim(human)
hd <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human_development.csv", stringsAsFactors = F)
gii <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/gender_inequality.csv", stringsAsFactors = F, na.strings = "..")
colnames(hd) <- c ("HDI_rank", "Country", "HDI", "Life.Exp", "Edu.Exp", "edu_years", "GNI", "GNI_rank")
colnames(gii) <- c ("GII_rank", "Country", "gender_ineq", "Mat.Mor", "Ado.Birth", "Parli.F", "Edu2.F", "Edu2.M", "Labo.F", "Labo.M")
colnames (gii)
Edu2.FM <- gii$Edu2.F / gii$Edu2.M
Labo.FM <- gii$Labo.F / gii$Labo.M
gii["Edu2.FM"] <- Edu2.FM
gii["Labo.FM"] <- Labo.FM
human <- merge (hd, gii, by = "Country")
str_replace(human$GNI, pattern = ",", replacement = "") %>% as.numeric
keep <- c( "Country", "Edu2.FM", "Labo.FM", "Edu.Exp", "Life.Exp", "GNI", "Mat.Mor", "Ado.Birth", "Parli.F")
human <- select (human, one_of(keep))
hd <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human_development.csv", stringsAsFactors = F)
gii <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/gender_inequality.csv", stringsAsFactors = F, na.strings = "..")
str(hd)
dim(hd)
str(gii)
dim(gii)
summary(hd)
summary(gii)
colnames(hd) <- c ("HDI_rank", "Country", "HDI", "Life.Exp", "Edu.Exp", "edu_years", "GNI", "GNI_rank")
colnames(gii) <- c ("GII_rank", "Country", "gender_ineq", "Mat.Mor", "Ado.Birth", "Parli.F", "Edu2.F", "Edu2.M", "Labo.F", "Labo.M")
Edu2.FM <- gii$Edu2.F / gii$Edu2.M
Labo.FM <- gii$Labo.F / gii$Labo.M
summary(Edu2.FM)
gii["Edu2.FM"] <- Edu2.FM
gii["Labo.FM"] <- Labo.FM
human <- merge (hd, gii, by = "Country")
str(human)
dim(human)
colnames(human)
write.table(human, file = "human")
library(stringr)
str_replace(human$GNI, pattern = ",", replacement = "") %>% as.numeric
library(dplyr)
keep <- c( "Country", "Edu2.FM", "Labo.FM", "Edu.Exp", "Life.Exp", "GNI", "Mat.Mor", "Ado.Birth", "Parli.F")
human <- select (human, one_of(keep))
dim(human)
?select
human <- select (.human, "Country", "Edu2.FM", "Labo.FM", "Edu.Exp", "Life.Exp", "GNI", "Mat.Mor", "Ado.Birth", "Parli.F")
human <- select (human, Country, Edu2.FM)
human <- select (.human, Country, Edu2.FM)
str(human)
keep <- c("Country", "Edu2.FM", "Labo.FM", "Life.Exp", "Edu.Exp", "GNI", "Mat.Mor", "Ado.Birth", "Parli.F")
human <- select(human, one_of(keep))
human <- select ("Country", "Edu2.FM", "Labo.FM", "Edu.Exp", "Life.Exp", "GNI", "Mat.Mor", "Ado.Birth", "Parli.F")
human <- select (Country, Edu2.FM, "Labo.FM", "Edu.Exp", "Life.Exp", "GNI", "Mat.Mor", "Ado.Birth", "Parli.F")
human <- select (human, one_of(keep))
library(dplyr)
keep <- c( "Country", "Edu2.FM", "Labo.FM", "Edu.Exp", "Life.Exp", "GNI", "Mat.Mor", "Ado.Birth", "Parli.F")
human <- select (human, one_of(keep))
str(human)
colnames(human)
write.table(human, file = "human")
library(stringr)
str_replace(human$GNI, pattern = ",", replacement = "") %>% as.numeric
str(human)
library(dplyr)
keep <- c( "Country", "Edu2.FM", "Labo.FM", "Edu.Exp", "Life.Exp", "GNI", "Mat.Mor", "Ado.Birth", "Parli.F")
human <- select (human, one_of(keep))
human <- select (human)
human <- select (human, keep)
human <- select (human, one_of(keep)
dim(human)
# Remove rows with missing values
complete.cases(human)
human_ <- filter (human, complete.cases(human) == TRUE)
str(human_)
# Remove regions
human_$Country
human_[- c(4, 44, 50, 81, 132, 135, 159), ]
human_countries <- human_[- c(4, 44, 50, 81, 132, 135, 159), ]
str(human_countries)
# Use country names as column names
rownames(human_countries) <- human_countries$Country
human <- select(human_countries, - Country)
str(human)
write.table(human, file = "human")
human <- select (human, one_of(keep))
?one_of
human <- one_of(keep)
keep <- c( "Country", "Edu2.FM", "Labo.FM", "Edu.Exp", "Life.Exp", "GNI", "Mat.Mor", "Ado.Birth", "Parli.F")
human <- one_of(keep)
human <- data= human, one_of(keep)
human <- data= human one_of(keep)
human <- data= select(human, one_of(keep))
human <- select(human, one_of(keep))
hd <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human_development.csv", stringsAsFactors = F)
gii <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/gender_inequality.csv", stringsAsFactors = F, na.strings = "..")
str(hd)
dim(hd)
dim(gii)
colnames(hd) <- c ("HDI_rank", "Country", "HDI", "Life.Exp", "Edu.Exp", "edu_years", "GNI", "GNI_rank")
colnames(gii) <- c ("GII_rank", "Country", "gender_ineq", "Mat.Mor", "Ado.Birth", "Parli.F", "Edu2.F", "Edu2.M", "Labo.F", "Labo.M")
Edu2.FM <- gii$Edu2.F / gii$Edu2.M
Labo.FM <- gii$Labo.F / gii$Labo.M
gii["Edu2.FM"] <- Edu2.FM
gii["Labo.FM"] <- Labo.FM
human <- merge (hd, gii, by = "Country")
str(human)
dim(human)
colnames(human)
library(stringr)
library(dplyr)
keep <- c( "Country", "Edu2.FM", "Labo.FM", "Edu.Exp", "Life.Exp", "GNI", "Mat.Mor", "Ado.Birth", "Parli.F")
human <- select(human, one_of(keep))
read.table("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human1.txt", sep = ",", header=TRUE)
human <- read.table("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human1.txt", sep = ",", header=TRUE)
str(human)
library(dplyr)
keep <- c( "Country", "Edu2.FM", "Labo.FM", "Edu.Exp", "Life.Exp", "GNI", "Mat.Mor", "Ado.Birth", "Parli.F")
human <- select(human, one_of(keep))
hd <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human_development.csv", stringsAsFactors = F)
gii <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/gender_inequality.csv", stringsAsFactors = F, na.strings = "..")
# structure and dimensions; summaries
str(hd)
dim(hd)
str(gii)
dim(gii)
summary(hd)
summary(gii)
# rename variables
colnames(hd) <- c ("HDI_rank", "Country", "HDI", "Life.Exp", "Edu.Exp", "edu_years", "GNI", "GNI_rank")
colnames(gii) <- c ("GII_rank", "Country", "gender_ineq", "Mat.Mor", "Ado.Birth", "Parli.F", "Edu2.F", "Edu2.M", "Labo.F", "Labo.M")
colnames (gii)
# New gender inequality variables
Edu2.FM <- gii$Edu2.F / gii$Edu2.M
Labo.FM <- gii$Labo.F / gii$Labo.M
summary(Edu2.FM)
gii["Edu2.FM"] <- Edu2.FM
gii["Labo.FM"] <- Labo.FM
# join datasets
human <- merge (hd, gii, by = "Country")
str(human)
dim(human)
colnames(human)
write.table(human, file = "human")
# Transforming GNI
library(stringr)
str_replace(human$GNI, pattern = ",", replacement = "") %>% as.numeric
# Selecting necessary columns
library(dplyr)
keep <- c( "Country", "Edu2.FM", "Labo.FM", "Edu.Exp", "Life.Exp", "GNI", "Mat.Mor", "Ado.Birth", "Parli.F")
human <- select (human, one_of(keep))
dim(human)
library(stringr)
human <- mutate(human, GNI = str_replace(human$GNI, pattern = ",", replacement = "") %>% as.numeric(as.character))
str(human)
keep <- c( "Country", "Edu2.FM", "Labo.FM", "Edu.Exp", "Life.Exp", "GNI", "Mat.Mor", "Ado.Birth", "Parli.F")
human <- select (human, one_of(keep))
dim(human)
complete.cases(human)
human_ <- filter (human, complete.cases(human) == TRUE)
str(human_)
# Remove regions
human_$Country
human_[- c(4, 44, 50, 81, 132, 135, 159), ]
human_countries <- human_[- c(4, 44, 50, 81, 132, 135, 159), ]
str(human_countries)
# Use country names as column names
rownames(human_countries) <- human_countries$Country
human <- select(human_countries, - Country)
str(human)
write.table(human, file = "human")
human <- read.table("human")
complete.cases(human)
human_ <- filter (human, complete.cases(human) == TRUE)
str(human_)
# Remove regions
human_$Country
human_[- c(4, 44, 50, 81, 132, 135, 159), ]
human_countries <- human_[- c(4, 44, 50, 81, 132, 135, 159), ]
str(human_countries)
# Use country names as column names
rownames(human_countries) <- human_countries$Country
human <- select(human_countries, - Country)
str(human)
write.table(human, file = "human")
human <- read.table("human")
human <- read.table("human")
str(human)
dim(human)
summary(human)
library(ggplot2)
ggplot(pairs(human))
cor_matrix <- cor(pairs (human)
cor_matrix <- cor(human)
cor_matrix <- cor(human)
cor_matrix
cor_matrix <- cor(human) %>% round (digits = 2)
cor_matrix
corrplot(cor_matrix, method="circle", type = "upper", cl.pos = "b", tl.pos = "d", tl.cex = 0.6)
library(ggplot2)
corrplot(cor_matrix, method="circle", type = "upper", cl.pos = "b", tl.pos = "d", tl.cex = 0.6)
library(corrplot)
corrplot(cor_matrix, method="circle", type = "upper", cl.pos = "b", tl.pos = "d", tl.cex = 0.6)
library(stringr)
str_replace(human$GNI, pattern = ",", replacement = "") %>% as.numeric
pca_human <- prcomp(human)
biplot(pca_human, choices = 1:2, cex = c(0.8, 1), col = c("grey40", "deeppink2"))
pca_human <- prcomp(human)
biplot(pca_human, choices = 1:2, cex = c(0.8, 1), col = c("grey40", "deeppink2"))
summary(pca_human)
pca_pr <- round(100*s$importance[2, ], digits = 1)
pca_human <- prcomp(human)
biplot(pca_human, choices = 1:2, cex = c(0.8, 1), col = c("grey40", "deeppink2"))
s <- summary(pca_human)
s
pca_pr <- round(100*s$importance[2, ], digits = 1)
pca_pr
pca_pr <- round(100*s$importance[2, ], digits = 1)
pca_pr
paste0(names(pca_pr), " (", pca_pr, "%)")
pc_lab <- paste0(names(pca_pr), " (", pca_pr, "%)")
pc_lab
# draw a biplot
biplot(pca_human, cex = c(0.8, 1), col = c("grey40", "deeppink2"), xlab = pc_lab[1], ylab = pc_lab[2])
str(human)
human_ <- scale (human)
pca_human <- prcomp(human)
biplot(pca_human, choices = 1:2, cex = c(0.8, 1), col = c("grey40", "deeppink2"))
s <- summary(pca_human)
s
pca_pr <- round(100*s$importance[2, ], digits = 1)
pca_pr
paste0(names(pca_pr), " (", pca_pr, "%)")
pc_lab <- paste0(names(pca_pr), " (", pca_pr, "%)")
pc_lab
# draw a biplot
biplot(pca_human, cex = c(0.8, 1), col = c("grey40", "deeppink2"), xlab = pc_lab[1], ylab = pc_lab[2])
human <- scale (human)
pca_human <- prcomp(human)
biplot(pca_human, choices = 1:2, cex = c(0.8, 1), col = c("grey40", "deeppink2"))
s <- summary(pca_human)
s
pca_pr <- round(100*s$importance[2, ], digits = 1)
pca_pr
paste0(names(pca_pr), " (", pca_pr, "%)")
pc_lab <- paste0(names(pca_pr), " (", pca_pr, "%)")
pc_lab
# draw a biplot
biplot(pca_human, cex = c(0.8, 1), col = c("grey40", "deeppink2"), xlab = pc_lab[1], ylab = pc_lab[2])
human <- scale (human)
pca_human <- prcomp(human)
biplot(pca_human, choices = 1:2, cex = c(0.8, 1), col = c("grey40", "deeppink2"))
s <- summary(pca_human)
s
pca_pr <- round(100*s$importance[2, ], digits = 1)
pca_pr
paste0(names(pca_pr), " (", pca_pr, "%)")
pc_lab <- paste0(names(pca_pr), " (", pca_pr, "%)")
pc_lab
# draw a biplot
biplot(pca_human, cex = c(0.8, 1), col = c("grey40", "deeppink2"), xlab = pc_lab[1], ylab = pc_lab[2])
library(Factominer)
install.packages("Factominer")
install.packages("FactoMiner")
install.packages("FactoMineR")
install.packages("FactoMineR")
library(FactoMiner)
library(FactoMineR)
tea <- library(tea)
str(tea)
data(tea)
str(tea)
dim(tea)
ggplot(pairs(tea))
ggplot(pairs(tea))
gather(tea) %>% ggplot(aes(value)) + geom_bar() + theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 8)) + facet_wrap("key", scales = "free")
library(tidyr)
gather(tea) %>% ggplot(aes(value)) + geom_bar() + theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 8)) + facet_wrap("key", scales = "free")
str(tea)
keep <- c("effect.on.health", "relaxing", "exciting", "slimming", "sophisticated", "age")
tea <- select(tea, one_of(keep))
gather(tea) %>% ggplot(aes(value)) + geom_bar() + theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 8)) + facet_wrap("key", scales = "free")
mca <- MCA(tea, graph = FALSE)
str(tea)
dim(tea)
keep <- c("effect.on.health", "relaxing", "exciting", "slimming", "sophisticated")
tea <- select(tea, one_of(keep))
gather(tea) %>% ggplot(aes(value)) + geom_bar() + theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 8)) + facet_wrap("key", scales = "free")
mca <- MCA(tea, graph = FALSE)
summary(mca)
plot(mca, invisible=c("ind"), habillage = "quali")
summary(mca)
plot(mca, invisible=c("ind"), habillage = "quali")
