m13 <- glm (high_use ~ sex + goout, data = alc, family = "binomial")
summary (m13)
probabilities <- predict(m13, type = "response")
alc <- mutate(alc, probability = probabilities)
alc <- mutate(alc, prediction = probability > 0.5)
table(high_use = alc$high_use, prediction = alc$prediction)
loss_func <- function(class, prob) {
n_wrong <- abs(class - prob) > 0.5
mean(n_wrong)
}
loss_func(class = alc$high_use, prob = alc$probability)
library(boot)
cv13 <- cv.glm(data = alc, cost = loss_func, glmfit = m13, K = 10)
cv13$delta[1]
m14 <- glm (high_use ~ goout, data = alc, family = "binomial")
summary (m14)
probabilities <- predict(m14, type = "response")
alc <- mutate(alc, probability = probabilities)
alc <- mutate(alc, prediction = probability > 0.5)
table(high_use = alc$high_use, prediction = alc$prediction)
loss_func <- function(class, prob) {
n_wrong <- abs(class - prob) > 0.5
mean(n_wrong)
}
loss_func(class = alc$high_use, prob = alc$probability)
library(boot)
cv14 <- cv.glm(data = alc, cost = loss_func, glmfit = m14, K = 10)
cv14$delta[1]
prediction_errors <- c(cv[2:14])
n_predictors <- c(1:13)
plot(prediction_errors, n_predictors)
?plot
prediction_errors <- c(cv[2:14])
n_predictors <- c(1:13)
plot(n_predictors, prediction_errors)
prediction_errors <- c(cv[2:14])
prediction_errors
n_predictors <- c(1:13)
plot(n_predictors, prediction_errors)
prediction_errors <- c(cv[2:14]$delta)
prediction_errors
n_predictors <- c(1:13)
plot(n_predictors, prediction_errors)
prediction_errors <- c(cv2$delta [1], cv3$delta [1], cv4$delta [1])
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
plot(pressure)
alc <- read.csv ("D:/PhD University of Helsinki/Open Data Science/IODS-project/Data/alc.csv", header = TRUE, sep = ",")
str(alc)
colnames(alc)
library(dplyr)
library(tidyr)
library(ggplot2)
library(gmodels)
sex_high_use <- CrossTable(alc$sex, alc$high_use)
g1 <- ggplot(alc, aes(x = sex, y = alc_use))
g1 + geom_boxplot() + ylab("alc_use")
g2 <- ggplot(alc, aes(x = high_use, y = age))
g2 + geom_boxplot() + ylab ("age")
reg1 <- lm (alc$alc_use ~ alc$age)
g3 <- plot(alc$alc_use ~ alc$age)
abline (reg1)
CrossTable(alc$Pstatus, alc$high_use)
g4 <- ggplot(alc, aes(x = Pstatus, y = alc_use))
g4 + geom_boxplot() + ylab("alc_use")
CrossTable(alc$romantic, alc$high_use)
g5 <- ggplot(alc, aes(x = romantic, y = alc_use))
g5 + geom_boxplot() + ylab("alc_use")
m <- glm (high_use ~ sex + age + Pstatus + romantic, data = alc, family = "binomial")
summary (m)
coef(m)
OR <- coef(m)%>%exp
confint(m)
CI <- confint(m) %>% exp
cbind (OR, CI)
probabilities <- predict(m, type = "response")
alc <- mutate(alc, probability = probabilities)
alc <- mutate(alc, prediction = probability > 0.5)
table(high_use = alc$high_use, prediction = alc$prediction)
m1 <- glm(high_use ~ sex + age, data = alc, family = "binomial")
probabilities <- predict(m1, type = "response")
alc <- mutate(alc, probability = probabilities)
alc <- mutate(alc, prediction = probability > 0.5)
table(high_use = alc$high_use, prediction = alc$prediction)
g_m1 <- ggplot(alc, aes(x = probability, y = high_use, col = prediction))
g_m1 + geom_point()
table(high_use = alc$high_use, prediction = alc$prediction) %>% prop.table() %>% addmargins()
loss_func <- function(class, prob) {
n_wrong <- abs(class - prob) > 0.5
mean(n_wrong)
}
loss_func(class = alc$high_use, prob = alc$probability)
library(boot)
cv <- cv.glm(data = alc, cost = loss_func, glmfit = m1, K = 10)
cv$delta[1]
m2 <- glm (high_use ~ age + sex + famsize + Medu + Fedu + studytime + failures + higher + paid + activities + famrel + freetime + goout, data = alc, family = "binomial")
probabilities <- predict(m2, type = "response")
alc <- mutate(alc, probability = probabilities)
alc <- mutate(alc, prediction = probability > 0.5)
table(high_use = alc$high_use, prediction = alc$prediction)
loss_func <- function(class, prob) {
n_wrong <- abs(class - prob) > 0.5
mean(n_wrong)
}
loss_func(class = alc$high_use, prob = alc$probability)
library(boot)
cv2 <- cv.glm(data = alc, cost = loss_func, glmfit = m2, K = 10)
cv2$delta[1]
summary(m2)
m3 <- glm (high_use ~ age + sex + famsize + Medu + Fedu + studytime + failures + paid + activities + famrel + freetime + goout, data = alc, family = "binomial")
summary (m3)
probabilities <- predict(m3, type = "response")
alc <- mutate(alc, probability = probabilities)
alc <- mutate(alc, prediction = probability > 0.5)
table(high_use = alc$high_use, prediction = alc$prediction)
loss_func <- function(class, prob) {
n_wrong <- abs(class - prob) > 0.5
mean(n_wrong)
}
loss_func(class = alc$high_use, prob = alc$probability)
library(boot)
cv3 <- cv.glm(data = alc, cost = loss_func, glmfit = m3, K = 10)
cv3$delta[1]
m4 <- glm (high_use ~ age + sex + famsize + Medu + Fedu + studytime + failures + paid + activities + famrel + goout, data = alc, family = "binomial")
summary (m4)
probabilities <- predict(m4, type = "response")
alc <- mutate(alc, probability = probabilities)
alc <- mutate(alc, prediction = probability > 0.5)
table(high_use = alc$high_use, prediction = alc$prediction)
loss_func <- function(class, prob) {
n_wrong <- abs(class - prob) > 0.5
mean(n_wrong)
}
loss_func(class = alc$high_use, prob = alc$probability)
library(boot)
cv4 <- cv.glm(data = alc, cost = loss_func, glmfit = m4, K = 10)
cv4$delta[1]
m5 <- glm (high_use ~ age + sex + famsize + Fedu + studytime + failures + paid + activities + famrel + goout, data = alc, family = "binomial")
summary (m5)
probabilities <- predict(m5, type = "response")
alc <- mutate(alc, probability = probabilities)
alc <- mutate(alc, prediction = probability > 0.5)
table(high_use = alc$high_use, prediction = alc$prediction)
loss_func <- function(class, prob) {
n_wrong <- abs(class - prob) > 0.5
mean(n_wrong)
}
loss_func(class = alc$high_use, prob = alc$probability)
library(boot)
cv5 <- cv.glm(data = alc, cost = loss_func, glmfit = m5, K = 10)
cv5$delta[1]
m6 <- glm (high_use ~ age + sex + famsize + studytime + failures + paid + activities + famrel + goout, data = alc, family = "binomial")
summary (m6)
probabilities <- predict(m6, type = "response")
alc <- mutate(alc, probability = probabilities)
alc <- mutate(alc, prediction = probability > 0.5)
table(high_use = alc$high_use, prediction = alc$prediction)
loss_func <- function(class, prob) {
n_wrong <- abs(class - prob) > 0.5
mean(n_wrong)
}
loss_func(class = alc$high_use, prob = alc$probability)
library(boot)
cv6 <- cv.glm(data = alc, cost = loss_func, glmfit = m6, K = 10)
cv6$delta[1]
m7 <- glm (high_use ~ age + sex + studytime + failures + paid + activities + famrel + goout, data = alc, family = "binomial")
summary (m7)
probabilities <- predict(m7, type = "response")
alc <- mutate(alc, probability = probabilities)
alc <- mutate(alc, prediction = probability > 0.5)
table(high_use = alc$high_use, prediction = alc$prediction)
loss_func <- function(class, prob) {
n_wrong <- abs(class - prob) > 0.5
mean(n_wrong)
}
loss_func(class = alc$high_use, prob = alc$probability)
library(boot)
cv7 <- cv.glm(data = alc, cost = loss_func, glmfit = m7, K = 10)
cv7$delta[1]
m8 <- glm (high_use ~ sex + studytime + failures + paid + activities + famrel + goout, data = alc, family = "binomial")
summary (m8)
probabilities <- predict(m8, type = "response")
alc <- mutate(alc, probability = probabilities)
alc <- mutate(alc, prediction = probability > 0.5)
table(high_use = alc$high_use, prediction = alc$prediction)
loss_func <- function(class, prob) {
n_wrong <- abs(class - prob) > 0.5
mean(n_wrong)
}
loss_func(class = alc$high_use, prob = alc$probability)
library(boot)
cv8 <- cv.glm(data = alc, cost = loss_func, glmfit = m8, K = 10)
cv8$delta[1]
m9 <- glm (high_use ~ sex + studytime + failures + paid + famrel + goout, data = alc, family = "binomial")
summary (m9)
probabilities <- predict(m9, type = "response")
alc <- mutate(alc, probability = probabilities)
alc <- mutate(alc, prediction = probability > 0.5)
table(high_use = alc$high_use, prediction = alc$prediction)
loss_func <- function(class, prob) {
n_wrong <- abs(class - prob) > 0.5
mean(n_wrong)
}
loss_func(class = alc$high_use, prob = alc$probability)
library(boot)
cv9 <- cv.glm(data = alc, cost = loss_func, glmfit = m9, K = 10)
cv9$delta[1]
m10 <- glm (high_use ~ sex + studytime + paid + famrel + goout, data = alc, family = "binomial")
summary (m10)
probabilities <- predict(m10, type = "response")
alc <- mutate(alc, probability = probabilities)
alc <- mutate(alc, prediction = probability > 0.5)
table(high_use = alc$high_use, prediction = alc$prediction)
loss_func <- function(class, prob) {
n_wrong <- abs(class - prob) > 0.5
mean(n_wrong)
}
loss_func(class = alc$high_use, prob = alc$probability)
library(boot)
cv10 <- cv.glm(data = alc, cost = loss_func, glmfit = m10, K = 10)
cv10$delta[1]
m11 <- glm (high_use ~ sex + studytime + famrel + goout, data = alc, family = "binomial")
summary (m11)
probabilities <- predict(m11, type = "response")
alc <- mutate(alc, probability = probabilities)
alc <- mutate(alc, prediction = probability > 0.5)
table(high_use = alc$high_use, prediction = alc$prediction)
loss_func <- function(class, prob) {
n_wrong <- abs(class - prob) > 0.5
mean(n_wrong)
}
loss_func(class = alc$high_use, prob = alc$probability)
library(boot)
cv11 <- cv.glm(data = alc, cost = loss_func, glmfit = m11, K = 10)
cv11$delta[1]
m12 <- glm (high_use ~ sex + famrel + goout, data = alc, family = "binomial")
summary (m12)
probabilities <- predict(m12, type = "response")
alc <- mutate(alc, probability = probabilities)
alc <- mutate(alc, prediction = probability > 0.5)
table(high_use = alc$high_use, prediction = alc$prediction)
loss_func <- function(class, prob) {
n_wrong <- abs(class - prob) > 0.5
mean(n_wrong)
}
loss_func(class = alc$high_use, prob = alc$probability)
library(boot)
cv12 <- cv.glm(data = alc, cost = loss_func, glmfit = m12, K = 10)
cv12$delta[1]
m13 <- glm (high_use ~ sex + goout, data = alc, family = "binomial")
summary (m13)
probabilities <- predict(m13, type = "response")
alc <- mutate(alc, probability = probabilities)
alc <- mutate(alc, prediction = probability > 0.5)
table(high_use = alc$high_use, prediction = alc$prediction)
loss_func <- function(class, prob) {
n_wrong <- abs(class - prob) > 0.5
mean(n_wrong)
}
loss_func(class = alc$high_use, prob = alc$probability)
library(boot)
cv13 <- cv.glm(data = alc, cost = loss_func, glmfit = m13, K = 10)
cv13$delta[1]
m14 <- glm (high_use ~ goout, data = alc, family = "binomial")
summary (m14)
probabilities <- predict(m14, type = "response")
alc <- mutate(alc, probability = probabilities)
alc <- mutate(alc, prediction = probability > 0.5)
table(high_use = alc$high_use, prediction = alc$prediction)
loss_func <- function(class, prob) {
n_wrong <- abs(class - prob) > 0.5
mean(n_wrong)
}
loss_func(class = alc$high_use, prob = alc$probability)
library(boot)
cv14 <- cv.glm(data = alc, cost = loss_func, glmfit = m14, K = 10)
cv14$delta[1]
prediction_errors <- c(cv2$delta [1], cv3$delta [1], cv4$delta [1])
prediction_errors
n_predictors <- c(1:13)
plot(n_predictors, prediction_errors)
prediction_errors <- c(cv2$delta [1], cv3$delta [1], cv4$delta [1], cv5$delta [1], cv6$delta [1], cv7$delta [1], cv8$delta [1], cv9$delta [1], cv10$delta [1], cv11$delta [1], cv12$delta [1], cv13$delta [1], cv14$delta [1])
prediction_errors
n_predictors <- c(1:13)
plot(n_predictors, prediction_errors)
testing_errors <- c(cv2$delta [1], cv3$delta [1], cv4$delta [1], cv5$delta [1], cv6$delta [1], cv7$delta [1], cv8$delta [1], cv9$delta [1], cv10$delta [1], cv11$delta [1], cv12$delta [1], cv13$delta [1], cv14$delta [1])
n_predictors <- c(1:13)
plot(n_predictors, testing_errors)
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
plot(pressure)
alc <- read.csv ("D:/PhD University of Helsinki/Open Data Science/IODS-project/Data/alc.csv", header = TRUE, sep = ",")
str(alc)
colnames(alc)
library(dplyr)
library(tidyr)
library(ggplot2)
library(gmodels)
sex_high_use <- CrossTable(alc$sex, alc$high_use)
g1 <- ggplot(alc, aes(x = sex, y = alc_use))
g1 + geom_boxplot() + ylab("alc_use")
g2 <- ggplot(alc, aes(x = high_use, y = age))
g2 + geom_boxplot() + ylab ("age")
reg1 <- lm (alc$alc_use ~ alc$age)
g3 <- plot(alc$alc_use ~ alc$age)
abline (reg1)
CrossTable(alc$Pstatus, alc$high_use)
g4 <- ggplot(alc, aes(x = Pstatus, y = alc_use))
g4 + geom_boxplot() + ylab("alc_use")
testing_errors <- c(cv2$delta [1], cv3$delta [1], cv4$delta [1], cv5$delta [1], cv6$delta [1], cv7$delta [1], cv8$delta [1], cv9$delta [1], cv10$delta [1], cv11$delta [1], cv12$delta [1], cv13$delta [1], cv14$delta [1])
n_predictors <- c(13:1)
plot(n_predictors, testing_errors)
testing_errors <- c(cv2$delta [1], cv3$delta [1], cv4$delta [1], cv5$delta [1], cv6$delta [1], cv7$delta [1], cv8$delta [1], cv9$delta [1], cv10$delta [1], cv11$delta [1], cv12$delta [1], cv13$delta [1], cv14$delta [1])
n_predictors <- c(1:13)
plot(n_predictors, testing_errors)
testing_errors <- c(cv2$delta [1], cv3$delta [1], cv4$delta [1], cv5$delta [1], cv6$delta [1], cv7$delta [1], cv8$delta [1], cv9$delta [1], cv10$delta [1], cv11$delta [1], cv12$delta [1], cv13$delta [1], cv14$delta [1])
n_predictors <- c(13:1)
plot(n_predictors, testing_errors)
knitr::opts_chunk$set(echo = TRUE)
library("dplyr")
library("ggplot2")
library(tidyr)
library(tidyverse)
install.packages("tidyverse")
install.packages("tidyverse")
library("dplyr")
library("ggplot2")
library(tidyr)
library(tidyverse)
library(corrplot)
library (MASS)
data(Boston)
str(Boston)
dim(Boston)
knitr::opts_chunk$set(echo = TRUE)
library("dplyr")
library("ggplot2")
library(tidyr)
library(tidyverse)
library(corrplot)
library (MASS)
data(Boston)
str(Boston)
dim(Boston)
pairs(Boston)
summary(Boston)
cor_matrix<-cor(Boston) %>% round (digits = 2)
cor_matrix
corrplot(cor_matrix, method="circle", type = "upper", cl.pos = "b", tl.pos = "d", tl.cex = 0.6)
boston_scaled <- scale (Boston)
summary(boston_scaled)
boston_scaled <- as.data.frame(boston_scaled)
bins <- quantile (boston_scaled$crim)
bins
crime <- cut(boston_scaled$crim, breaks = bins, label = c("low", "med_low", "med_high", "high"), include.lowest = TRUE)
boston_scaled <- dplyr::select(boston_scaled, -crim)
boston_scaled <- data.frame(boston_scaled, crime)
n <- nrow(boston_scaled)
ind <- sample(n,  size = n * 0.8)
train <- boston_scaled[ind,]
test <- boston_scaled[-ind,]
correct_classes <- test$crime
test <- dplyr::select(test, -crime)
lda.fit <- lda (crime ~ ., data = train)
lda.fit
lda.graph <- function(x, myscale = 1, arrow_heads = 0.1, color = "red", tex = 0.75, choices = c(1,2)){
heads <- coef(x)
arrows(x0 = 0, y0 = 0,
x1 = myscale * heads[,choices[1]],
y1 = myscale * heads[,choices[2]], col=color, length = arrow_heads)
text(myscale * heads[,choices], labels = row.names(heads),
cex = tex, col=color, pos=3)
}
classes <- as.numeric(train$crime)
plot(lda.fit, dimen = 2, col = classes, pch = classes)
lda.graph(lda.fit, myscale = 2)
lda.pred <- predict(lda.fit, newdata = test)
table(correct = correct_classes, predicted = lda.pred$class)
data ('Boston')
scale (Boston)
dist_eu <- dist(Boston)
km <- kmeans(dist_eu, centers = 5)
set.seed(123)
k_max <- 10
twcss <- sapply(1:k_max, function(k){kmeans(dist_eu, k)$tot.withinss})
qplot(x = 1:k_max, y = twcss, geom = 'line')
km <-kmeans(dist_eu, centers = 2)
pairs(Boston, col = km$cluster)
setwd("D:/PhD University of Helsinki/Open Data Science/IODS-project")
knitr::opts_chunk$set(echo = TRUE)
library("dplyr")
library("ggplot2")
library(tidyr)
library(tidyverse)
library(corrplot)
library (MASS)
data(Boston)
str(Boston)
dim(Boston)
pairs(Boston)
summary(Boston)
cor_matrix<-cor(Boston) %>% round (digits = 2)
cor_matrix
corrplot(cor_matrix, method="circle", type = "upper", cl.pos = "b", tl.pos = "d", tl.cex = 0.6)
boston_scaled <- scale (Boston)
summary(boston_scaled)
boston_scaled <- as.data.frame(boston_scaled)
bins <- quantile (boston_scaled$crim)
bins
crime <- cut(boston_scaled$crim, breaks = bins, label = c("low", "med_low", "med_high", "high"), include.lowest = TRUE)
boston_scaled <- dplyr::select(boston_scaled, -crim)
boston_scaled <- data.frame(boston_scaled, crime)
n <- nrow(boston_scaled)
ind <- sample(n,  size = n * 0.8)
train <- boston_scaled[ind,]
test <- boston_scaled[-ind,]
correct_classes <- test$crime
test <- dplyr::select(test, -crime)
lda.fit <- lda (crime ~ ., data = train)
lda.fit
lda.graph <- function(x, myscale = 1, arrow_heads = 0.1, color = "red", tex = 0.75, choices = c(1,2)){
heads <- coef(x)
arrows(x0 = 0, y0 = 0,
x1 = myscale * heads[,choices[1]],
y1 = myscale * heads[,choices[2]], col=color, length = arrow_heads)
text(myscale * heads[,choices], labels = row.names(heads),
cex = tex, col=color, pos=3)
}
classes <- as.numeric(train$crime)
plot(lda.fit, dimen = 2, col = classes, pch = classes)
lda.graph(lda.fit, myscale = 2)
lda.pred <- predict(lda.fit, newdata = test)
table(correct = correct_classes, predicted = lda.pred$class)
data ('Boston')
scale (Boston)
dist_eu <- dist(Boston)
km <- kmeans(dist_eu, centers = 5)
set.seed(123)
k_max <- 10
twcss <- sapply(1:k_max, function(k){kmeans(dist_eu, k)$tot.withinss})
qplot(x = 1:k_max, y = twcss, geom = 'line')
km <-kmeans(dist_eu, centers = 2)
pairs(Boston, col = km$cluster)
keep <- c("effect.on.health", "relaxing", "exciting", "slimming", "sophisticated")
tea <- select(tea, one_of(keep))
library(dplyr)
keep <- c("effect.on.health", "relaxing", "exciting", "slimming", "sophisticated")
tea <- select(tea, one_of(keep))
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, error = FALSE)
human <- read.table("human")
str(human)
dim(human)
library(ggplot2)
library(corrplot)
library(dplyr)
summary(human)
ggplot(pairs(human))
cor_matrix <- cor(human) %>% round (digits = 2)
cor_matrix
corrplot(cor_matrix, method="circle", type = "upper", cl.pos = "b", tl.pos = "d", tl.cex = 0.6)
pca_human <- prcomp(human)
biplot(pca_human, choices = 1:2, cex = c(0.8, 1), col = c("grey40", "deeppink2"))
s <- summary(pca_human)
s
pca_pr <- round(100*s$importance[2, ], digits = 1)
pca_pr
paste0(names(pca_pr), " (", pca_pr, "%)")
pc_lab <- paste0(names(pca_pr), " (", pca_pr, "%)")
pc_lab
# draw a biplot
biplot(pca_human, cex = c(0.8, 1), col = c("grey40", "deeppink2"), xlab = pc_lab[1], ylab = pc_lab[2])
human <- scale (human)
pca_human <- prcomp(human)
biplot(pca_human, choices = 1:2, cex = c(0.8, 1), col = c("grey40", "deeppink2"))
s <- summary(pca_human)
s
pca_pr <- round(100*s$importance[2, ], digits = 1)
pca_pr
paste0(names(pca_pr), " (", pca_pr, "%)")
pc_lab <- paste0(names(pca_pr), " (", pca_pr, "%)")
pc_lab
# draw a biplot
biplot(pca_human, cex = c(0.8, 1), col = c("grey40", "deeppink2"), xlab = pc_lab[1], ylab = pc_lab[2])
library(FactoMineR)
library(tidyr)
data(tea)
str(tea)
dim(tea)
keep <- c("effect.on.health", "relaxing", "exciting", "slimming", "sophisticated")
tea <- select(tea, one_of(keep))
str(tea)
dim(tea)
gather(tea) %>% ggplot(aes(value)) + geom_bar() + theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 8)) + facet_wrap("key", scales = "free")
mca <- MCA(tea, graph = FALSE)
summary(mca)
plot(mca, invisible=c("ind"), habillage = "quali")
keep <- c("effect.on.health", "relaxing", "exciting", "slimming", "sophisticated")
tea <- select(tea, one_of(keep))
keep <- c("effect.on.health", "relaxing", "exciting", "slimming", "sophisticated")
tea <- select(tea, one_of(keep))
str(tea)
library(tidyr)
library(dplyr)
keep <- c("effect.on.health", "relaxing", "exciting", "slimming", "sophisticated")
tea <- select(tea, one_of(keep))
str(tea)
dim(tea)
keep <- c("effect.on.health", "relaxing", "exciting", "slimming", "sophisticated")
tea <- dplyr::select(tea, one_of(keep))
str(tea)
dim(tea)
gather(tea) %>% ggplot(aes(value)) + geom_bar() + theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 8)) + facet_wrap("key", scales = "free")
